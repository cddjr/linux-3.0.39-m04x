#ifndef __LINUX_ES305B_PARAM_H_
#define __LINUX_ES305B_PARAM_H_

static const u8 incall_receiver_buf[] =
{
0x80, 0x0C, 0x0A, 0x00, 0x80, 0x0D, 0x00, 0x0F, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
0x80, 0x0C, 0x0A, 0x02, 0x80, 0x0D, 0x00, 0x00, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0000:(0 clocks)
0x80, 0x0C, 0x0A, 0x03, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0001:(1 clocks)
0x80, 0x0C, 0x0A, 0x04, 0x80, 0x0D, 0x00, 0x02, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0002:TxFalling/RxFalling
0x80, 0x0C, 0x0A, 0x05, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0001:Big Endian
0x80, 0x0C, 0x0A, 0x06, 0x80, 0x0D, 0x00, 0x00, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0000:Disable
0x80, 0x0C, 0x0A, 0x07, 0x80, 0x0D, 0x00, 0x00, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM

0x80, 0x0C, 0x0C, 0x00, 0x80, 0x0D, 0x00, 0x0F, //; 0x800C:SetDeviceParmID, 0x0C:PCM2, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
0x80, 0x0C, 0x0C, 0x02, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0C:PCM2, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0001:(1 clocks)
0x80, 0x0C, 0x0C, 0x03, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0C:PCM2, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0001:(1 clocks)
0x80, 0x0C, 0x0C, 0x04, 0x80, 0x0D, 0x00, 0x02, //; 0x800C:SetDeviceParmID, 0x0C:PCM2, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0002:TxFalling/RxFalling
0x80, 0x0C, 0x0C, 0x05, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0C:PCM2, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0001:Big Endian
0x80, 0x0C, 0x0C, 0x06, 0x80, 0x0D, 0x00, 0x00, //; 0x800C:SetDeviceParmID, 0x0C:PCM2, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0000:Disable
0x80, 0x0C, 0x0C, 0x07, 0x80, 0x0D, 0x00, 0x00, //; 0x800C:SetDeviceParmID, 0x0C:PCM2, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM
};

static const u8 incall_speaker_buf[] =
{
0x80, 0x0C, 0x0A, 0x00, 0x80, 0x0D, 0x00, 0x0F, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
0x80, 0x0C, 0x0A, 0x02, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0001:(1 clocks)
0x80, 0x0C, 0x0A, 0x03, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0001:(1 clocks)
0x80, 0x0C, 0x0A, 0x04, 0x80, 0x0D, 0x00, 0x02, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0002:TxFalling/RxFalling
0x80, 0x0C, 0x0A, 0x05, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0001:Big Endian
0x80, 0x0C, 0x0A, 0x06, 0x80, 0x0D, 0x00, 0x00, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0000:Disable
0x80, 0x0C, 0x0A, 0x07, 0x80, 0x0D, 0x00, 0x00, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM

0x80, 0x0C, 0x0C, 0x00, 0x80, 0x0D, 0x00, 0x0F, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
0x80, 0x0C, 0x0C, 0x02, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0001:(1 clocks)
0x80, 0x0C, 0x0C, 0x03, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0001:(1 clocks)
0x80, 0x0C, 0x0C, 0x04, 0x80, 0x0D, 0x00, 0x02, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0002:TxFalling/RxFalling
0x80, 0x0C, 0x0C, 0x05, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0001:Big Endian
0x80, 0x0C, 0x0C, 0x06, 0x80, 0x0D, 0x00, 0x00, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0000:Disable
0x80, 0x0C, 0x0C, 0x07, 0x80, 0x0D, 0x00, 0x00, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM
};

static const u8 incall_headphone_buf[] =
{
0x80, 0x0C, 0x0A, 0x00, 0x80, 0x0D, 0x00, 0x0F, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
0x80, 0x0C, 0x0A, 0x02, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0001:(1 clocks)
0x80, 0x0C, 0x0A, 0x03, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0001:(1 clocks)
0x80, 0x0C, 0x0A, 0x04, 0x80, 0x0D, 0x00, 0x02, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0002:TxFalling/RxFalling
0x80, 0x0C, 0x0A, 0x05, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0001:Big Endian
0x80, 0x0C, 0x0A, 0x06, 0x80, 0x0D, 0x00, 0x00, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0000:Disable
0x80, 0x0C, 0x0A, 0x07, 0x80, 0x0D, 0x00, 0x00, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM

0x80, 0x0C, 0x0C, 0x00, 0x80, 0x0D, 0x00, 0x0F, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
0x80, 0x0C, 0x0C, 0x02, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0001:(1 clocks)
0x80, 0x0C, 0x0C, 0x03, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0001:(1 clocks)
0x80, 0x0C, 0x0C, 0x04, 0x80, 0x0D, 0x00, 0x02, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0002:TxFalling/RxFalling
0x80, 0x0C, 0x0C, 0x05, 0x80, 0x0D, 0x00, 0x01, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0001:Big Endian
0x80, 0x0C, 0x0C, 0x06, 0x80, 0x0D, 0x00, 0x00, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0000:Disable
0x80, 0x0C, 0x0C, 0x07, 0x80, 0x0D, 0x00, 0x00, //; 0x800C:SetDeviceParmID, 0x0A:PCM0, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM
};

static const u8 incall_bt_buf[] =
{
#if 0
	/* port config portC to portD */
	0x80, 0x26, 0x00, 0x17,
	// 0x8026:A200_msg_SetAudioRouting, 0x0017: in: port_C(FEIN/SINK), port_D(PRI/SINK), out; poart_C(CSOUT/SRC), port_D(FEOUT/SRC)

	/* set algorithom sample rate to 8K */
	0x80, 0x4C, 0x00, 0x00,
	// 0x804C:A200_msg_SetAlgoSampleRate, 0x0000: WB(8kHz)

	0x80, 0x0C, 0x0C, 0x00,
	0x80, 0x0D, 0x00, 0x0F,
   // 0x800C:SetDeviceParmID, 0x0C:PORTC, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
	0x80, 0x0C, 0x0C, 0x02,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0C:PORTC, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0000:(0 clocks)
	0x80, 0x0C, 0x0C, 0x03,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0C:PORTC, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0000:(0 clock) // for PCM
	0x80, 0x0C, 0x0C, 0x04,
	0x80, 0x0D, 0x00, 0x03,
   // 0x800C:SetDeviceParmID, 0x0C:PORTC, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0003:TxFalling/RxRising // for PCM
	0x80, 0x0C, 0x0C, 0x05,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0C:PORTC, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0000:Little Endian
	0x80, 0x0C, 0x0C, 0x06,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0C:PORTC, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0001:Enable
	0x80, 0x0C, 0x0C, 0x07,
	0x80, 0x0D, 0x00, 0x00,
	// 0x800C:SetDeviceParmID, 0x0C:PORTC, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM
	/* param config for poartC using PCM and portD using PCM */
	0x80, 0x0C, 0x0D, 0x00,
	0x80, 0x0D, 0x00, 0x0F,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
	0x80, 0x0C, 0x0D, 0x02,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0000:(0 clocks)
	0x80, 0x0C, 0x0D, 0x03,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0000:(1 clock) // for PCM
	0x80, 0x0C, 0x0D, 0x04,
	0x80, 0x0D, 0x00, 0x03,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0003:TxFalling/RxRising // for PCM
	0x80, 0x0C, 0x0D, 0x05,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0000:Little Endian
	0x80, 0x0C, 0x0D, 0x06,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0001:Enable
	0x80, 0x0C, 0x0D, 0x07,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM
#endif

	/* algorithom param config */
	0x80, 0x17, 0x00, 0x02,
	0x80, 0x18, 0x00, 0x03,
	// 0x8017:SetAlgorithmParmID, 0x0002:Microphone Configuration, 0x8018:SetAlgorithmParm, 0x0003:1-mic External (MD)
	0x80, 0x17, 0x00, 0x00,
	0x80, 0x18, 0x00, 0x04,
	// 0x8017:SetAlgorithmParmID, 0x004B:Tx Noise Suppression Level, 0x8018:SetAlgorithmParm, 0x0004:Level 4
	0x80, 0x17, 0x00, 0x03,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x0003:AEC Mode, 0x8018:SetAlgorithmParm, 0x0001:AEC On (auto select mode)
	0x80, 0x17, 0x00, 0x12,
	0x80, 0x18, 0x00, 0x05,
	// 0x8017:SetAlgorithmParmID, 0x0012:   Downlink Speaker Volume, 0x8018:SetAlgorithmParm, 0x0005:(+5 dB)
	0x80, 0x17, 0x00, 0x23,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0023:   Use AEC Comfort Noise Fill, 0x8018:SetAlgorithmParm, 0x0000:No
	0x80, 0x17, 0x00, 0x34,
	0x80, 0x18, 0x00, 0x28,
	// 0x8017:SetAlgorithmParmID, 0x0034:   Echo Suppression Enhancement, 0x8018:SetAlgorithmParm, 0x0028:(40 dB)
	0x80, 0x17, 0x00, 0x2E,
	0x80, 0x18, 0xFF, 0xD3,
	// 0x8017:SetAlgorithmParmID, 0x002E:   AEC Comfort Noise Gain, 0x8018:SetAlgorithmParm, 0xFFD3:(-45 dB)
	0x80, 0x17, 0x00, 0x04,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0004:Use AGC, 0x8018:SetAlgorithmParm, 0x0000:No
	0x80, 0x17, 0x00, 0x28,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0028:Use Rx AGC, 0x8018:SetAlgorithmParm, 0x0000:No
	0x80, 0x17, 0x00, 0x09,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0009:Speaker Enhancement Mode, 0x8018:SetAlgorithmParm, 0x0000:SE Off (HPF only)
	0x80, 0x17, 0x00, 0x0E,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x000E:Far End Noise Suppression, 0x8018:SetAlgorithmParm, 0x0001:On (auto select mode)
	0x80, 0x17, 0x00, 0x0F,
	0x80, 0x18, 0x00, 0x0F,
	// 0x8017:SetAlgorithmParmID, 0x004C:   Rx Noise Suppression Level, 0x8018:SetAlgorithmParm, 0x000F:15dB
	0x80, 0x17, 0x00, 0x20,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0020:Tx PostEq Mode, 0x8018:SetAlgorithmParm, 0x0000:Off
	0x80, 0x17, 0x00, 0x1F,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x001F:Rx PostEq Mode, 0x8018:SetAlgorithmParm, 0x0000:Off
	0x80, 0x17, 0x00, 0x31,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0031:Rx MBC Mode, 0x8018:SetAlgorithmParm, 0x0000:Off
	0x80, 0x17, 0x00, 0x1A,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x001A:Use Tx Comfort Noise, 0x8018:SetAlgorithmParm, 0x0001:Yes
	0x80, 0x17, 0x00, 0x1B,
	0x80, 0x18, 0xFF, 0xAB,
	// 0x8017:SetAlgorithmParmID, 0x001B:   Tx Comfort Noise gain (dB), 0x8018:SetAlgorithmParm, 0xFFAB:(-85 dB)
	0x80, 0x1C, 0x00, 0x01,
	// 0x801C:VoiceProcessingOn, 0x0001:On
	0x80, 0x1B, 0x00, 0x06,
	// 0x801B:SetDigitalInputGain, 0x00:Primary Mic (Tx), 0x06:(6 dB)
	0x80, 0x1B, 0x01, 0xA6,
	// 0x801B:SetDigitalInputGain, 0x01:Secondary Mic (Tx), 0xA6:(-90 dB)
	0x80, 0x15, 0x00, 0x08,
	// 0x8015:SetDigitalOutputGain, 0x08:Tx, 0x00:(8 dB)
	0x80, 0x1B, 0x02, 0x00,
	// 0x801B:SetDigitalInputGain, 0x02:Far End (Rx), 0x00:(0 dB)
	0x80, 0x15, 0x01, 0x06,
	// 0x8015:SetDigitalOutputGain, 0x01:Rx, 0x06:(6 dB)
};

static const u8 incall_bt_vpoff_buf[] =
{
	0x80, 0x17, 0x00, 0x02,
	0x80, 0x18, 0x00, 0x03,
	// 0x8017:SetAlgorithmParmID, 0x0002:Microphone Configuration, 0x8018:SetAlgorithmParm, 0x0003:1-mic External (MD)
	0x80, 0x1C, 0x00, 0x00,
	// 0x801C:VoiceProcessingOff, 0x0001:Off
	0x80, 0x1B, 0x00, 0x00,
	// 0x801B:SetDigitalInputGain, 0x00:Primary Mic (Tx), 0x00:(0 dB)
	0x80, 0x1B, 0x01, 0xA6,
	// 0x801B:SetDigitalInputGain, 0x01:Secondary Mic (Tx), 0xA6:(-90 dB)

	// 0dB => 3dB 据蓝牙组要求改善部分车载通话上行音量过小，可能会导致部分蓝牙耳机上行音量过大.
	0x80, 0x15, 0x00, 0x03,
	// 0x8015:SetDigitalOutputGain, 0x00:Tx, 0x03:(3 dB)// 0dB => 3dB

	0x80, 0x1B, 0x02, 0x00,
	// 0x801B:SetDigitalInputGain, 0x02:Far End (Rx), 0x00:(0 dB)
	0x80, 0x15, 0x01, 0x00,
	// 0x8015:SetDigitalOutputGain, 0x01:Rx, 0x00:(0 dB)
};

static const u8 voip_receiver_buf[] =
{
	/* port config portA to portB */
	0x80, 0x26, 0x00, 0x01,
	// 0x8026:A200_msg_SetAudioRouting, 0x0001: in: port_A(PRI/SEC), port_C(FEIN/SINK), out; poart_A(FEOUT/SRC), portC(CSOUT/SRC)

	/* set algorithom sample rate to 8K */
	0x80, 0x4C, 0x00, 0x00,
	// 0x804C:A200_msg_SetAlgoSampleRate, 0x0000: NB(8kHz)

	/* param config for poartA using PCM and portC using PCM */
	0x80, 0x0C, 0x0A, 0x00,
	0x80, 0x0D, 0x00, 0x0F,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
	0x80, 0x0C, 0x0A, 0x02,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0000:(0 clocks)
	0x80, 0x0C, 0x0A, 0x03,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0000:(1 clock) // for PCM
	0x80, 0x0C, 0x0A, 0x04,
	0x80, 0x0D, 0x00, 0x03,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0003:TxFalling/RxRising // for PCM
	0x80, 0x0C, 0x0A, 0x05,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0000:Little Endian
	0x80, 0x0C, 0x0A, 0x06,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0001:Enable
	0x80, 0x0C, 0x0A, 0x07,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM
	0x80, 0x0C, 0x0B, 0x00,
	0x80, 0x0D, 0x00, 0x0F,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
	0x80, 0x0C, 0x0B, 0x02,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0000:(0 clocks)
	0x80, 0x0C, 0x0B, 0x03,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0000:(0 clock) // for PCM
	0x80, 0x0C, 0x0B, 0x04,
	0x80, 0x0D, 0x00, 0x03,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0003:TxFalling/RxRising // for PCM
	0x80, 0x0C, 0x0B, 0x05,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0000:Little Endian
	0x80, 0x0C, 0x0B, 0x06,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0001:Enable
	0x80, 0x0C, 0x0B, 0x07,
	0x80, 0x0D, 0x00, 0x00,
	// 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM

	/* algorithom param config */
	0x80, 0x17, 0x00, 0x4B,
	0x80, 0x18, 0x00, 0x04,
	// 0x8017:SetAlgorithmParmID, 0x004B:Tx Noise Suppression Level, 0x8018:SetAlgorithmParm, 0x0004:Level 4
	0x80, 0x17, 0x00, 0x02,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0002:Microphone Configuration, 0x8018:SetAlgorithmParm, 0x0000:2-mic Close Talk (CT)
	0x80, 0x17, 0x00, 0x03,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x0003:AEC Mode, 0x8018:SetAlgorithmParm, 0x0001:AEC On
	0x80, 0x17, 0x00, 0x12,
	0x80, 0x18, 0xFF, 0xFD,
	// 0x8017:SetAlgorithmParmID, 0x0012:   Downlink Speaker Volume, 0x8018:SetAlgorithmParm, 0xFFFD:(-3 dB)
	0x80, 0x17, 0x00, 0x23,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0023:   Use AEC Comfort Noise Fill, 0x8018:SetAlgorithmParm, 0x0000:No
	0x80, 0x17, 0x00, 0x34,
	0x80, 0x18, 0x00, 0x08,
	// 0x8017:SetAlgorithmParmID, 0x0034:   Echo Suppression Enhancement, 0x8018:SetAlgorithmParm, 0x0008:(+8 dB)
	0x80, 0x17, 0x00, 0x2E,
	0x80, 0x18, 0xFF, 0xD3,
	// 0x8017:SetAlgorithmParmID, 0x002E:   AEC Comfort Noise Gain, 0x8018:SetAlgorithmParm, 0xFFD3:(-45 dB)
	0x80, 0x17, 0x00, 0x04,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0004:Use  AGC, 0x8018:SetAlgorithmParm, 0x0000:No
	0x80, 0x17, 0x00, 0x28,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0028:Use Rx AGC, 0x8018:SetAlgorithmParm, 0x0000:No
	0x80, 0x17, 0x00, 0x29,
	0x80, 0x18, 0xFF, 0xE6,
	// 0x8017:SetAlgorithmParmID, 0x0029:   Rx AGC Target Level (dB), 0x8018:SetAlgorithmParm, 0xFFE6:(-26 dB)
	0x80, 0x17, 0x00, 0x2A,
	0x80, 0x18, 0xFF, 0xC4,
	// 0x8017:SetAlgorithmParmID, 0x002A:   Rx AGC Noise Floor (dB), 0x8018:SetAlgorithmParm, 0xFFC4:(-60 dB)
	0x80, 0x17, 0x00, 0x2B,
	0x80, 0x18, 0x00, 0x04,
	// 0x8017:SetAlgorithmParmID, 0x002B:   Rx AGC SNR Improve (dB), 0x8018:SetAlgorithmParm, 0x0004:(4 dB)
	0x80, 0x17, 0x00, 0x2C,
	0x80, 0x18, 0x00, 0x04,
	// 0x8017:SetAlgorithmParmID, 0x002C:   Rx AGC Up Rate (dBS), 0x8018:SetAlgorithmParm, 0x0004:(4 dBS)
	0x80, 0x17, 0x00, 0x2D,
	0x80, 0x18, 0x00, 0x04,
	// 0x8017:SetAlgorithmParmID, 0x002D:   Rx AGC Down Rate (dBS), 0x8018:SetAlgorithmParm, 0x0004:(4 dBS)
	0x80, 0x17, 0x01, 0x02,
	0x80, 0x18, 0x00, 0x0F,
	// 0x8017:SetAlgorithmParmID, 0x0102:   Rx AGC Max Gain (dB), 0x8018:SetAlgorithmParm, 0x000F:(15 dB)
	0x80, 0x17, 0x00, 0x09,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0009:Speaker Enhancement Mode, 0x8018:SetAlgorithmParm, 0x0000:SE Off (HPF only)
	0x80, 0x17, 0x00, 0x25,
	0x80, 0x18, 0xFF, 0xFD,
	// 0x8017:SetAlgorithmParmID, 0x0025:   SE Noise Estimate Adj, 0x8018:SetAlgorithmParm, 0xFFFD:(-3 dB)
	0x80, 0x17, 0x00, 0x3D,
	0x80, 0x18, 0x00, 0x05,
	// 0x8017:SetAlgorithmParmID, 0x003D:   SE Max Gain (dB), 0x8018:SetAlgorithmParm, 0x0005:(5 dB)
	0x80, 0x17, 0x00, 0x0E,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x000E:Far End Noise Suppression, 0x8018:SetAlgorithmParm, 0x0001:On (auto select mode)
	0x80, 0x17, 0x00, 0x0F,
	0x80, 0x18, 0x00, 0x0F,
	// 0x8017:SetAlgorithmParmID, 0x004C:   Rx Noise Suppression Level, 0x8018:SetAlgorithmParm, 0x000F:15dB
	0x80, 0x17, 0x00, 0x20,
	0x80, 0x18, 0x00, 0x02,
	// 0x8017:SetAlgorithmParmID, 0x0020:Tx PostEq Mode, 0x8018:SetAlgorithmParm, 0x0002:On
	0x80, 0x17, 0x00, 0x1F,
	0x80, 0x18, 0x00, 0x02,
	// 0x8017:SetAlgorithmParmID, 0x001F:Rx PostEq Mode, 0x8018:SetAlgorithmParm, 0x0002:On
	0x80, 0x17, 0x00, 0x31,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0031:Rx MBC Mode, 0x8018:SetAlgorithmParm, 0x0000:Off
	0x80, 0x17, 0x00, 0x1A,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x001A:Use Tx Comfort Noise, 0x8018:SetAlgorithmParm, 0x0001:Yes
	0x80, 0x17, 0x00, 0x1B,
	0x80, 0x18, 0xFF, 0xB5,
	// 0x8017:SetAlgorithmParmID, 0x001B:   Tx Comfort Noise gain (dB), 0x8018:SetAlgorithmParm, 0xFFB5:(-75 dB)
	0x80, 0x17, 0x00, 0x21,
	0x80, 0x18, 0x00, 0x00, //
	0x80, 0x1C, 0x00, 0x01,
	// 0x801C:VoiceProcessing, 0x0001:On
	0x80, 0x1B, 0x00, 0x06,
	// 0x801B:SetDigitalInputGain, 0x00:Primary Mic (Tx), 0x06:(6 dB)
	0x80, 0x1B, 0x01, 0x01,
	// 0x801B:SetDigitalInputGain, 0x01:Secondary Mic (Tx), 0x01:(1 dB)
	0x80, 0x15, 0x00, 0x0E,
	// 0x8015:SetDigitalOutputGain, 0x00:Tx, 0x0E:(14 dB)
	0x80, 0x15, 0x01, 0xFB,
	// 0x8015:SetDigitalOutputGain, 0x01:Rx, 0xFB:(-5 dB)
	0x80, 0x1B, 0x02, 0x03,
	// 0x801B:SetDigitalInputGain, 0x02:Far End (Rx), 0x03:(3 dB)
};

static const u8 voip_speaker_buf[] =
{
	/* port config portA to portB */
	0x80, 0x26, 0x00, 0x01,
	// 0x8026:A200_msg_SetAudioRouting, 0x0001: in: port_A(PRI/SEC), port_C(FEIN/SINK), out; poart_A(FEOUT/SRC), portC(CSOUT/SRC)

	/* set algorithom sample rate to 8K */
	0x80, 0x4C, 0x00, 0x00,
	// 0x804C:A200_msg_SetAlgoSampleRate, 0x0000: NB(8kHz)

	/* param config for poartA using PCM and portC using PCM */
	0x80, 0x0C, 0x0A, 0x00,
	0x80, 0x0D, 0x00, 0x0F,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
	0x80, 0x0C, 0x0A, 0x02,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0000:(0 clocks)
	0x80, 0x0C, 0x0A, 0x03,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0000:(1 clock) // for PCM
	0x80, 0x0C, 0x0A, 0x04,
	0x80, 0x0D, 0x00, 0x03,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0003:TxFalling/RxRising // for PCM
	0x80, 0x0C, 0x0A, 0x05,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0000:Little Endian
	0x80, 0x0C, 0x0A, 0x06,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0001:Enable
	0x80, 0x0C, 0x0A, 0x07,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM
	0x80, 0x0C, 0x0B, 0x00,
	0x80, 0x0D, 0x00, 0x0F,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
	0x80, 0x0C, 0x0B, 0x02,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0000:(0 clocks)
	0x80, 0x0C, 0x0B, 0x03,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0000:(0 clock) // for PCM
	0x80, 0x0C, 0x0B, 0x04,
	0x80, 0x0D, 0x00, 0x03,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0003:TxFalling/RxRising // for PCM
	0x80, 0x0C, 0x0B, 0x05,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0000:Little Endian
	0x80, 0x0C, 0x0B, 0x06,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0001:Enable
	0x80, 0x0C, 0x0B, 0x07,
	0x80, 0x0D, 0x00, 0x00,
	// 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM

	/* algorithom param config */
	0x80, 0x17, 0x00, 0x02,
	0x80, 0x18, 0x00, 0x02,
	// 0x8017:SetAlgorithmParmID, 0x0002:Microphone Configuration, 0x8018:SetAlgorithmParm, 0x0002:1-mic Desktop/Vehicle (DV)
	0x80, 0x17, 0x00, 0x00,
	0x80, 0x18, 0x00, 0x02,
	// 0x8017:SetAlgorithmParmID, 0x004B:Tx Noise Suppression Level, 0x8018:SetAlgorithmParm, 0x0002:Level 2
	0x80, 0x17, 0x00, 0x03,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x0003:AEC Mode, 0x8018:SetAlgorithmParm, 0x0001:AEC On (auto select mode)
	0x80, 0x17, 0x00, 0x12,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0012:   Downlink Speaker Volume, 0x8018:SetAlgorithmParm, 0x0000:(0 dB)
	0x80, 0x17, 0x00, 0x23,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0023:   Use AEC Comfort Noise Fill, 0x8018:SetAlgorithmParm, 0x0000:No
	0x80, 0x17, 0x00, 0x34,
	0x80, 0x18, 0x00, 0x18,
	// 0x8017:SetAlgorithmParmID, 0x0034:   Echo Suppression Enhancement, 0x8018:SetAlgorithmParm, 0x0018:(24 dB)
	0x80, 0x17, 0x00, 0x2E,
	0x80, 0x18, 0xFF, 0xD3,
	// 0x8017:SetAlgorithmParmID, 0x002E:   AEC Comfort Noise Gain, 0x8018:SetAlgorithmParm, 0xFFD3:(-45 dB)
	0x80, 0x17, 0x00, 0x04,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x0004:Use AGC, 0x8018:SetAlgorithmParm, 0x0001:Yes
	0x80, 0x17, 0x00, 0x05,
	0x80, 0x18, 0xFF, 0xE6,
	// 0x8017:SetAlgorithmParmID, 0x0005:   AGC Target Level (dB), 0x8018:SetAlgorithmParm, 0xFFE6:(-26 dB)
	0x80, 0x17, 0x00, 0x06,
	0x80, 0x18, 0xFF, 0xC4,
	// 0x8017:SetAlgorithmParmID, 0x0006:   AGC Noise Floor (dB), 0x8018:SetAlgorithmParm, 0xFFC4:(-60 dB)
	0x80, 0x17, 0x00, 0x07,
	0x80, 0x18, 0x00, 0x04,
	// 0x8017:SetAlgorithmParmID, 0x0007:   AGC SNR Improve (dB), 0x8018:SetAlgorithmParm, 0x0004:(4 dB)
	0x80, 0x17, 0x00, 0x26,
	0x80, 0x18, 0x00, 0x02,
	// 0x8017:SetAlgorithmParmID, 0x0026:   AGC Up Rate (dBS), 0x8018:SetAlgorithmParm, 0x0002:(2 dBS)
	0x80, 0x17, 0x00, 0x27,
	0x80, 0x18, 0x00, 0x02,
	// 0x8017:SetAlgorithmParmID, 0x0027:   AGC Down Rate (dBS), 0x8018:SetAlgorithmParm, 0x0002:(2 dBS)
	0x80, 0x17, 0x01, 0x00,
	0x80, 0x18, 0x00, 0x0F,
	// 0x8017:SetAlgorithmParmID, 0x0100:   AGC Max Gain (dB), 0x8018:SetAlgorithmParm, 0x000F:(15 dB)
	0x80, 0x17, 0x00, 0x28,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0028:Use Rx AGC, 0x8018:SetAlgorithmParm, 0x0000:No
	0x80, 0x17, 0x00, 0x09,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0009:Speaker Enhancement Mode, 0x8018:SetAlgorithmParm, 0x0000:SE Off (HPF only)
	0x80, 0x17, 0x00, 0x0E,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x000E:Far End Noise Suppression, 0x8018:SetAlgorithmParm, 0x0001:On (auto select mode)
	0x80, 0x17, 0x00, 0x0F,
	0x80, 0x18, 0x00, 0x0F,
	// 0x8017:SetAlgorithmParmID, 0x004C:   Rx Noise Suppression Level, 0x8018:SetAlgorithmParm, 0x000F:15dB
	0x80, 0x17, 0x00, 0x20,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0020:Tx PostEq Mode, 0x8018:SetAlgorithmParm, 0x0000:Off
	0x80, 0x17, 0x00, 0x1F,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x001F:Rx PostEq Mode, 0x8018:SetAlgorithmParm, 0x0000:Off
	0x80, 0x17, 0x00, 0x31,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0031:Rx MBC Mode, 0x8018:SetAlgorithmParm, 0x0000:Off
	0x80, 0x17, 0x00, 0x1A,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x001A:Use Tx Comfort Noise, 0x8018:SetAlgorithmParm, 0x0001:Yes
	0x80, 0x17, 0x00, 0x1B,
	0x80, 0x18, 0xFF, 0xAB,
	// 0x8017:SetAlgorithmParmID, 0x001B:   Tx Comfort Noise gain (dB), 0x8018:SetAlgorithmParm, 0xFFAB:(-85 dB)
	0x80, 0x1C, 0x00, 0x01,
	// 0x801C:VoiceProcessingOn, 0x0000:On
	0x80, 0x1B, 0x00, 0x0A,
	// 0x801B:SetDigitalInputGain, 0x00:Primary Mic (Tx), 0x0A:(10 dB)
	0x80, 0x1B, 0x01, 0xA6,
	// 0x801B:SetDigitalInputGain, 0x01:Secondary Mic (Tx), 0xA6:(-90 dB)
	0x80, 0x15, 0x00, 0x05,
	// 0x8015:SetDigitalOutputGain, 0x00:Tx, 0x05:(5 dB)
	0x80, 0x1B, 0x02, 0xFE,
	// 0x801B:SetDigitalInputGain, 0x02:Far End (Rx), 0xFE:(-2 dB)
	0x80, 0x15, 0x01, 0x06,
	// 0x8015:SetDigitalOutputGain, 0x01:Rx, 0x06:(6 dB)
};

static const u8 voip_headphone_buf[] =
{
	/* port config portA to portB */
	0x80, 0x26, 0x00, 0x01,
	// 0x8026:A200_msg_SetAudioRouting, 0x0001: in: port_A(PRI/SEC), port_C(FEIN/SINK), out; poart_A(FEOUT/SRC), portC(CSOUT/SRC)

	/* set algorithom sample rate to 8K */
	0x80, 0x4C, 0x00, 0x00,
	// 0x804C:A200_msg_SetAlgoSampleRate, 0x0000: WB(8kHz)

	/* param config for poartA using PCM and portC using PCM */
	0x80, 0x0C, 0x0A, 0x00,
	0x80, 0x0D, 0x00, 0x0F,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
	0x80, 0x0C, 0x0A, 0x02,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0000:(0 clocks)
	0x80, 0x0C, 0x0A, 0x03,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0000:(1 clock) // for PCM
	0x80, 0x0C, 0x0A, 0x04,
	0x80, 0x0D, 0x00, 0x03,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0003:TxFalling/RxRising // for PCM
	0x80, 0x0C, 0x0A, 0x05,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0000:Little Endian
	0x80, 0x0C, 0x0A, 0x06,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0001:Enable
	0x80, 0x0C, 0x0A, 0x07,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0A:PORTA, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM
	0x80, 0x0C, 0x0B, 0x00,
	0x80, 0x0D, 0x00, 0x0F,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
	0x80, 0x0C, 0x0B, 0x02,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0000:(0 clocks)
	0x80, 0x0C, 0x0B, 0x03,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0000:(0 clock) // for PCM
	0x80, 0x0C, 0x0B, 0x04,
	0x80, 0x0D, 0x00, 0x03,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0003:TxFalling/RxRising // for PCM
	0x80, 0x0C, 0x0B, 0x05,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0000:Little Endian
	0x80, 0x0C, 0x0B, 0x06,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0001:Enable
	0x80, 0x0C, 0x0B, 0x07,
	0x80, 0x0D, 0x00, 0x00,
	// 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM

	/* algorithom param config */
	0x80, 0x17, 0x00, 0x02,
	0x80, 0x18, 0x00, 0x03,
	// 0x8017:SetAlgorithmParmID, 0x0002:Microphone Configuration, 0x8018:SetAlgorithmParm, 0x0003:1-mic External (MD)
	0x80, 0x17, 0x00, 0x00,
	0x80, 0x18, 0x00, 0x04,
	// 0x8017:SetAlgorithmParmID, 0x004B:Tx Noise Suppression Level, 0x8018:SetAlgorithmParm, 0x0004:Level 4
	0x80, 0x17, 0x00, 0x03,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x0003:AEC Mode, 0x8018:SetAlgorithmParm, 0x0001:AEC On (auto select mode)
	0x80, 0x17, 0x00, 0x12,
	0x80, 0x18, 0xFF, 0xF9,
	// 0x8017:SetAlgorithmParmID, 0x0012:   Downlink Speaker Volume, 0x8018:SetAlgorithmParm, 0xFFF9:(-7 dB)
	0x80, 0x17, 0x00, 0x23,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0023:   Use AEC Comfort Noise Fill, 0x8018:SetAlgorithmParm, 0x0000:No
	0x80, 0x17, 0x00, 0x34,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0034:   Echo Suppression Enhancement, 0x8018:SetAlgorithmParm, 0x0000:(0 dB)
	0x80, 0x17, 0x00, 0x2E,
	0x80, 0x18, 0xFF, 0xD3,
	// 0x8017:SetAlgorithmParmID, 0x002E:   AEC Comfort Noise Gain, 0x8018:SetAlgorithmParm, 0xFFD3:(-45 dB)
	0x80, 0x17, 0x00, 0x04,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x0004:Use AGC, 0x8018:SetAlgorithmParm, 0x0001:Yes
	0x80, 0x17, 0x00, 0x05,
	0x80, 0x18, 0xFF, 0xE6,
	// 0x8017:SetAlgorithmParmID, 0x0005:   AGC Target Level (dB), 0x8018:SetAlgorithmParm, 0xFFE6:(-26 dB)
	0x80, 0x17, 0x00, 0x06,
	0x80, 0x18, 0xFF, 0xC4,
	// 0x8017:SetAlgorithmParmID, 0x0006:   AGC Noise Floor (dB), 0x8018:SetAlgorithmParm, 0xFFC4:(-60 dB)
	0x80, 0x17, 0x00, 0x07,
	0x80, 0x18, 0x00, 0x04,
	// 0x8017:SetAlgorithmParmID, 0x0007:   AGC SNR Improve (dB), 0x8018:SetAlgorithmParm, 0x0004:(4 dB)
	0x80, 0x17, 0x00, 0x26,
	0x80, 0x18, 0x00, 0x04,
	// 0x8017:SetAlgorithmParmID, 0x0026:   AGC Up Rate (dBS), 0x8018:SetAlgorithmParm, 0x0004:(4 dBS)
	0x80, 0x17, 0x00, 0x27,
	0x80, 0x18, 0x00, 0x04,
	// 0x8017:SetAlgorithmParmID, 0x0027:   AGC Down Rate (dBS), 0x8018:SetAlgorithmParm, 0x0004:(4 dBS)
	0x80, 0x17, 0x01, 0x00,
	0x80, 0x18, 0x00, 0x0F,
	// 0x8017:SetAlgorithmParmID, 0x0100:   AGC Max Gain (dB), 0x8018:SetAlgorithmParm, 0x000F:(15 dB)
	0x80, 0x17, 0x00, 0x28,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0028:Use Rx AGC, 0x8018:SetAlgorithmParm, 0x0000:No
	0x80, 0x17, 0x00, 0x09,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0009:Speaker Enhancement Mode, 0x8018:SetAlgorithmParm, 0x0000:SE Off (HPF only)
	0x80, 0x17, 0x00, 0x0E,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x000E:Far End Noise Suppression, 0x8018:SetAlgorithmParm, 0x0001:On (auto select mode)
	0x80, 0x17, 0x00, 0x0F,
	0x80, 0x18, 0x00, 0x0F,
	// 0x8017:SetAlgorithmParmID, 0x004C:   Rx Noise Suppression Level, 0x8018:SetAlgorithmParm, 0x000F:15dB
	0x80, 0x17, 0x00, 0x20,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0020:Tx PostEq Mode, 0x8018:SetAlgorithmParm, 0x0000:Off
	0x80, 0x17, 0x00, 0x1F,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x001F:Rx PostEq Mode, 0x8018:SetAlgorithmParm, 0x0000:Off
	0x80, 0x17, 0x00, 0x31,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0031:Rx MBC Mode, 0x8018:SetAlgorithmParm, 0x0000:Off
	0x80, 0x17, 0x00, 0x1A,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x001A:Use Tx Comfort Noise, 0x8018:SetAlgorithmParm, 0x0001:Yes
	0x80, 0x17, 0x00, 0x1B,
	0x80, 0x18, 0xFF, 0xAB,
	// 0x8017:SetAlgorithmParmID, 0x001B:   Tx Comfort Noise gain (dB), 0x8018:SetAlgorithmParm, 0xFFAB:(-85 dB)
	0x80, 0x1C, 0x00, 0x01,
	// 0x801C:VoiceProcessingOn, 0x0001:On
	0x80, 0x1B, 0x00, 0x13,
	// 0x801B:SetDigitalInputGain, 0x00:Primary Mic (Tx), 0x13:(19 dB)
	0x80, 0x1B, 0x01, 0xA6,
	// 0x801B:SetDigitalInputGain, 0x01:Secondary Mic (Tx), 0xA6:(-90 dB)
	0x80, 0x15, 0x00, 0x00,
	// 0x8015:SetDigitalOutputGain, 0x00:Tx, 0x00:(0 dB)
	0x80, 0x1B, 0x02, 0xFE,
	// 0x801B:SetDigitalInputGain, 0x02:Far End (Rx), 0xFE:(-2 dB)
	0x80, 0x15, 0x01, 0x06,
	// 0x8015:SetDigitalOutputGain, 0x01:Rx, 0x06:(6 dB)
};

static const u8 voip_bt_buf[] =
{
	/* port config portB to portD */
	0x80, 0x26, 0x00, 0x17,
	// 0x8026:A200_msg_SetAudioRouting, 0x0017: in: port_C(FEIN/SINK), port_D(PRI/SINK), out; poart_C(CSOUT/SRC), port_D(FEOUT/SRC)

	/* set algorithom sample rate to 8K */
	0x80, 0x4C, 0x00, 0x00,
	// 0x804C:A200_msg_SetAlgoSampleRate, 0x0000: WB(8kHz)

	0x80, 0x0C, 0x0B, 0x00,
	0x80, 0x0D, 0x00, 0x0F,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
	0x80, 0x0C, 0x0B, 0x02,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0000:(0 clocks)
	0x80, 0x0C, 0x0B, 0x03,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0000:(0 clock) // for PCM
	0x80, 0x0C, 0x0B, 0x04,
	0x80, 0x0D, 0x00, 0x03,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0003:TxFalling/RxRising // for PCM
	0x80, 0x0C, 0x0B, 0x05,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0000:Little Endian
	0x80, 0x0C, 0x0B, 0x06,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0001:Enable
	0x80, 0x0C, 0x0B, 0x07,
	0x80, 0x0D, 0x00, 0x00,
	// 0x800C:SetDeviceParmID, 0x0C:PORTB, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM
	/* param config for poartC using PCM and portD using PCM */
	0x80, 0x0C, 0x0D, 0x00,
	0x80, 0x0D, 0x00, 0x0F,
   // 0x800C:SetDeviceParmID, 0x0A:PORTD, 0x00:PCM WordLength, 0x800D:SetDeviceParm, 0x000F:16 Bits
	0x80, 0x0C, 0x0D, 0x02,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0A:PORTD, 0x02:PCM DelFromFsTx, 0x800D:SetDeviceParm, 0x0000:(0 clocks)
	0x80, 0x0C, 0x0D, 0x03,
	0x80, 0x0D, 0x00, 0x00,
   // 0x800C:SetDeviceParmID, 0x0A:PORTD, 0x03:PCM DelFromFsRx, 0x800D:SetDeviceParm, 0x0000:(1 clock) // for PCM
	0x80, 0x0C, 0x0D, 0x04,
	0x80, 0x0D, 0x00, 0x03,
   // 0x800C:SetDeviceParmID, 0x0A:PORTD, 0x04:PCM Latch Edge, 0x800D:SetDeviceParm, 0x0003:TxFalling/RxRising // for PCM
	0x80, 0x0C, 0x0D, 0x05,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0A:PORTD, 0x05:PCM Endianness, 0x800D:SetDeviceParm, 0x0000:Little Endian
	0x80, 0x0C, 0x0D, 0x06,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0A:PORTD, 0x06:PCM Tristate Enable, 0x800D:SetDeviceParm, 0x0001:Enable
	0x80, 0x0C, 0x0D, 0x07,
	0x80, 0x0D, 0x00, 0x01,
   // 0x800C:SetDeviceParmID, 0x0A:PORTD, 0x07:PCM Audio Port Mode, 0x800D:SetDeviceParm, 0x0000:PCM

	/* algorithom param config */
	0x80, 0x17, 0x00, 0x02,
	0x80, 0x18, 0x00, 0x03,
	// 0x8017:SetAlgorithmParmID, 0x0002:Microphone Configuration, 0x8018:SetAlgorithmParm, 0x0003:1-mic External (MD)
	0x80, 0x17, 0x00, 0x00,
	0x80, 0x18, 0x00, 0x04,
	// 0x8017:SetAlgorithmParmID, 0x004B:Tx Noise Suppression Level, 0x8018:SetAlgorithmParm, 0x0004:Level 4
	0x80, 0x17, 0x00, 0x03,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x0003:AEC Mode, 0x8018:SetAlgorithmParm, 0x0001:AEC On (auto select mode)
	0x80, 0x17, 0x00, 0x12,
	0x80, 0x18, 0x00, 0x05,
	// 0x8017:SetAlgorithmParmID, 0x0012:   Downlink Speaker Volume, 0x8018:SetAlgorithmParm, 0x0005:(+5 dB)
	0x80, 0x17, 0x00, 0x23,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0023:   Use AEC Comfort Noise Fill, 0x8018:SetAlgorithmParm, 0x0000:No
	0x80, 0x17, 0x00, 0x34,
	0x80, 0x18, 0x00, 0x28,
	// 0x8017:SetAlgorithmParmID, 0x0034:   Echo Suppression Enhancement, 0x8018:SetAlgorithmParm, 0x0028:(40 dB)
	0x80, 0x17, 0x00, 0x2E,
	0x80, 0x18, 0xFF, 0xD3,
	// 0x8017:SetAlgorithmParmID, 0x002E:   AEC Comfort Noise Gain, 0x8018:SetAlgorithmParm, 0xFFD3:(-45 dB)
	0x80, 0x17, 0x00, 0x04,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0004:Use AGC, 0x8018:SetAlgorithmParm, 0x0000:No
	0x80, 0x17, 0x00, 0x28,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0028:Use Rx AGC, 0x8018:SetAlgorithmParm, 0x0000:No
	0x80, 0x17, 0x00, 0x09,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0009:Speaker Enhancement Mode, 0x8018:SetAlgorithmParm, 0x0000:SE Off (HPF only)
	0x80, 0x17, 0x00, 0x0E,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x000E:Far End Noise Suppression, 0x8018:SetAlgorithmParm, 0x0001:On (auto select mode)
	0x80, 0x17, 0x00, 0x0F,
	0x80, 0x18, 0x00, 0x0F,
	// 0x8017:SetAlgorithmParmID, 0x004C:   Rx Noise Suppression Level, 0x8018:SetAlgorithmParm, 0x000F:15dB
	0x80, 0x17, 0x00, 0x20,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0020:Tx PostEq Mode, 0x8018:SetAlgorithmParm, 0x0000:Off
	0x80, 0x17, 0x00, 0x1F,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x001F:Rx PostEq Mode, 0x8018:SetAlgorithmParm, 0x0000:Off
	0x80, 0x17, 0x00, 0x31,
	0x80, 0x18, 0x00, 0x00,
	// 0x8017:SetAlgorithmParmID, 0x0031:Rx MBC Mode, 0x8018:SetAlgorithmParm, 0x0000:Off
	0x80, 0x17, 0x00, 0x1A,
	0x80, 0x18, 0x00, 0x01,
	// 0x8017:SetAlgorithmParmID, 0x001A:Use Tx Comfort Noise, 0x8018:SetAlgorithmParm, 0x0001:Yes
	0x80, 0x17, 0x00, 0x1B,
	0x80, 0x18, 0xFF, 0xAB,
	// 0x8017:SetAlgorithmParmID, 0x001B:   Tx Comfort Noise gain (dB), 0x8018:SetAlgorithmParm, 0xFFAB:(-85 dB)
	0x80, 0x1C, 0x00, 0x01,
	// 0x801C:VoiceProcessingOn, 0x0001:On
	0x80, 0x1B, 0x00, 0x06,
	// 0x801B:SetDigitalInputGain, 0x00:Primary Mic (Tx), 0x06:(6 dB)
	0x80, 0x1B, 0x01, 0xA6,
	// 0x801B:SetDigitalInputGain, 0x01:Secondary Mic (Tx), 0xA6:(-90 dB)
	0x80, 0x15, 0x00, 0x08,
	// 0x8015:SetDigitalOutputGain, 0x08:Tx, 0x00:(8 dB)
	0x80, 0x1B, 0x02, 0x00,
	// 0x801B:SetDigitalInputGain, 0x02:Far End (Rx), 0x00:(0 dB)
	0x80, 0x15, 0x01, 0x06,
	// 0x8015:SetDigitalOutputGain, 0x01:Rx, 0x06:(6 dB)
};


static const u8 voip_bt_vpoff_buf[] =
{
	0x80, 0x17, 0x00, 0x02,
	0x80, 0x18, 0x00, 0x03,
	// 0x8017:SetAlgorithmParmID, 0x0002:Microphone Configuration, 0x8018:SetAlgorithmParm, 0x0003:1-mic External (MD)
	0x80, 0x1C, 0x00, 0x00,
	// 0x801C:VoiceProcessingOff, 0x0001:Off
	0x80, 0x1B, 0x00, 0x00,
	// 0x801B:SetDigitalInputGain, 0x00:Primary Mic (Tx), 0x00:(0 dB)
	0x80, 0x1B, 0x01, 0xA6,
	// 0x801B:SetDigitalInputGain, 0x01:Secondary Mic (Tx), 0xA6:(-90 dB)

	// 0dB => 3dB 据蓝牙组要求改善部分车载通话上行音量过小，可能会导致部分蓝牙耳机上行音量过大.
	0x80, 0x15, 0x00, 0x03,
	// 0x8015:SetDigitalOutputGain, 0x00:Tx, 0x03:(3 dB)// 0dB => 3dB

	0x80, 0x1B, 0x02, 0x00,
	// 0x801B:SetDigitalInputGain, 0x02:Far End (Rx), 0x00:(0 dB)
	0x80, 0x15, 0x01, 0x00,
	// 0x8015:SetDigitalOutputGain, 0x01:Rx, 0x00:(0 dB)
};

static const u8 suspend_mode[] = {
	0x80, 0x10, 0x00, 0x01
};

static const u8 bypassed_c_2_a[] = {
	/* bypass c to a */
	0x80, 0x52, 0x00, 0xE2,
	0x80, 0x10, 0x00, 0x01
};

#endif /* __LINUX_ES305B_PARAM_H_ */
